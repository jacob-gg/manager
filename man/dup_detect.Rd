% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dup_detect.R
\name{dup_detect}
\alias{dup_detect}
\title{dup_detect}
\usage{
dup_detect(test_col, verbose = T)
}
\arguments{
\item{test_col}{A vector.}

\item{verbose}{\code{T/F} indicating whether detailed output should be printed to the console.}
}
\value{
\itemize{
  \item Console output with information on duplicates (\code{verbose = T/F}).
  \item \code{every_duplicated_row}: Invisible vector indexing duplicate vector elements (including "original" duplicates).
}
}
\description{
Identifies all duplicated elements in vector, including "original" duplicated values.
}
\details{
\code{dup_detect()} is different than \code{base::duplicated()}. If you fed \code{c(5, 5, 7)} to \code{duplicated()}, the function would identify one duplicated value (the second five).
But for the purposes of bot detection and data wrangling, we often want to identify \emph{all} matching values in, say, a column of IP addresses (i.e., identify both 5s in the vector above as duplicates, not just the second one).
\code{dup_detect()} does that.

\code{dup_detect()} will:
\itemize{
  \item Tell you the total number of duplicated values in a vector (e.g., IP addresses; latitudes; longitudes).
  \item Optionally, tell you which vector elements match each specific duplicated value (\code{verbose} argument)
  \item Return a vector (invisibly) with the indexes of every duplicated element (including "original" duplicates)
}
}
\examples{
# Create 100 IPv4 addresses and use dup_detect on them:
set.seed(4)
ip_draw <- 0:255
ip_addresses <- vector(length = 100)
for(i in 1:100) {
  ip_addresses[i] <- paste0(sample(ip_draw, 4, replace = TRUE), collapse = ".")
}
ip_addresses[sample(1:100, 10, replace = FALSE)] <- sample(ip_addresses, 10, replace = FALSE)
dup_detect(ip_addresses)

}
